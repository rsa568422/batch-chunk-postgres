name: "CodeQL y Cobertura"

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'java' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests and generate coverage report
        run: mvn test org.jacoco:jacoco-maven-plugin:report

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

      - name: Check coverage threshold
        run: |
          echo "Ejecutando Maven para generar el informe de cobertura..."
          mvn org.jacoco:jacoco-maven-plugin:report org.jacoco:jacoco-maven-plugin:report-aggregate -Djacoco.outputDirectory=./target/site/jacoco-aggregate -Djacoco.dataFile=./target/jacoco.exec
          
          echo "Contenido del directorio target:"
          ls -R ./target
          
          echo "Buscando el archivo de informe de cobertura..."
          REPORT_FILE=$(find ./target -name "index.html" | grep -m 1 "jacoco-aggregate")
          
          if [ -f "$REPORT_FILE" ]; then
            echo "Archivo de informe encontrado: $REPORT_FILE"
            COVERAGE=$(grep -oP 'Total.*?([0-9]{1,3})%' "$REPORT_FILE" | awk '{print $NF}' | sed 's/%//')
            echo "Cobertura extraída: $COVERAGE"
          else
            echo "No se encontró el archivo de informe de cobertura"
            exit 1
          fi
          
          if [ -n "$COVERAGE" ]; then
            echo "Cobertura total: $COVERAGE%"
            if [ "$COVERAGE" -lt 80 ]; then
              echo "La cobertura está por debajo del 80%. Actual: $COVERAGE%"
              exit 1
            fi
          else
            echo "No se pudo extraer el porcentaje de cobertura"
            exit 1
          fi
        shell: bash